{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Exercise\\\\coding-exercise\\\\src\\\\screens\\\\CodingExercise.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../components/Button\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CodingExercise(props) {\n  _s();\n\n  const [value, setValue] = useState('');\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Coding Exercise :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProblemStatement, {\n      children: \"Problem Statement :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      children: [\"Write an application that given a number of pennies will calculate the minimum number of Sterling coins equivalent to that amount.\", \"\\n\", \"Eg. 123p = 1 x \\xA31, 1 x 20p, 1 x 2p, 1 x 1p\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rect2, {\n      children: [/*#__PURE__*/_jsxDEV(InsertValue, {\n        children: [\"Insert Value :\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: value,\n          style: {\n            width: 100,\n            padding: 10,\n            margin: 8,\n            border: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          height: 38,\n          width: 97,\n          backgroundColor: \"rgba(95,75,139,1)\",\n          marginTop: 15,\n          marginLeft: 400\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rect3, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CodingExercise, \"VT026KPfAMV2SfPHCKKw12yIC/g=\", false, function () {\n  return [useStyles];\n});\n\n_c = CodingExercise;\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650\n  }\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Eclair', 262, 16.0, 24, 6.0), createData('Cupcake', 305, 3.7, 67, 4.3), createData('Gingerbread', 356, 16.0, 49, 3.9)];\nconst Container = styled.div`\n  display: flex;\n  background-color: rgba(95,75,139,1);\n  flex-direction: column;\n  height: 100vh;\n  width: 100vw;\n`;\n_c2 = Container;\nconst Rect2 = styled.div`\n  width: 572px;\n  height: 179px;\n  background-color: rgba(227,159,141,1);\n  flex-direction: column;\n  display: flex;\n  margin-top: 50px;\n  margin-left: 44px;\n`;\n_c3 = Rect2;\nconst InsertValue = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 700;\n  color: rgba(95,75,139,1);\n  font-size: 18px;\n  margin-top: 46px;\n  margin-left: 14px;\n`;\n_c4 = InsertValue;\nconst Paragraph = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 400;\n  color: rgba(227,159,141,1);\n  font-size: 20px;\n  margin-top: 20px;\n  margin-left: 44px;\n`;\n_c5 = Paragraph;\nconst ProblemStatement = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 400;\n  color: rgba(227,159,141,1);\n  font-size: 31px;\n  margin-top: 50px;\n  margin-left: 44px;\n`;\n_c6 = ProblemStatement;\nconst Title = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 400;\n  color: rgba(227,159,141,1);\n  font-size: 45px;\n  margin-top: 50px;\n  margin-left: 44px;\n`;\n_c7 = Title;\nconst Rect3 = styled.div`\n  width: 411px;\n  height: 390px;\n  background-color: rgba(227,159,141,1);\n  margin-left: 254px;\n`;\n_c8 = Rect3;\nexport default CodingExercise;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"CodingExercise\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Rect2\");\n$RefreshReg$(_c4, \"InsertValue\");\n$RefreshReg$(_c5, \"Paragraph\");\n$RefreshReg$(_c6, \"ProblemStatement\");\n$RefreshReg$(_c7, \"Title\");\n$RefreshReg$(_c8, \"Rect3\");","map":{"version":3,"sources":["D:/Coding Exercise/coding-exercise/src/screens/CodingExercise.js"],"names":["React","useState","styled","Button","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CodingExercise","props","value","setValue","classes","useStyles","width","padding","margin","border","height","backgroundColor","marginTop","marginLeft","table","minWidth","createData","name","calories","fat","carbs","protein","rows","Container","div","Rect2","InsertValue","span","Paragraph","ProblemStatement","Title","Rect3"],"mappings":"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","sourcesContent":["import React, {useState}  from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../components/Button\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nfunction CodingExercise(props) {\n  const [value,setValue] = useState('');\n  const classes = useStyles();\n  return (\n    <Container>\n      <Title>Coding Exercise :</Title>\n      <ProblemStatement>Problem Statement :</ProblemStatement>\n      <Paragraph>\n        Write an application that given a number of pennies will calculate the\n        minimum number of Sterling coins equivalent to that amount.{\"\\n\"}Eg.\n        123p = 1 x Â£1, 1 x 20p, 1 x 2p, 1 x 1p\n      </Paragraph>\n      <Rect2>\n        <InsertValue>Insert Value : \n          <input type=\"text\" value={value} style={{width: 100,\n                                  padding: 10,\n                                  margin: 8,\n                                  border: 1}} />\n          </InsertValue>\n        \n        <Button\n          style={{\n            height: 38,\n            width: 97,\n            backgroundColor: \"rgba(95,75,139,1)\",\n            marginTop: 15,\n            marginLeft: 400\n          }}\n        ></Button>\n      </Rect2>\n      <Rect3></Rect3>\n    </Container>\n  );\n}\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\nconst Container = styled.div`\n  display: flex;\n  background-color: rgba(95,75,139,1);\n  flex-direction: column;\n  height: 100vh;\n  width: 100vw;\n`;\n\nconst Rect2 = styled.div`\n  width: 572px;\n  height: 179px;\n  background-color: rgba(227,159,141,1);\n  flex-direction: column;\n  display: flex;\n  margin-top: 50px;\n  margin-left: 44px;\n`;\n\nconst InsertValue = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 700;\n  color: rgba(95,75,139,1);\n  font-size: 18px;\n  margin-top: 46px;\n  margin-left: 14px;\n`;\n\nconst Paragraph = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 400;\n  color: rgba(227,159,141,1);\n  font-size: 20px;\n  margin-top: 20px;\n  margin-left: 44px;\n`;\n\nconst ProblemStatement = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 400;\n  color: rgba(227,159,141,1);\n  font-size: 31px;\n  margin-top: 50px;\n  margin-left: 44px;\n`;\n\nconst Title = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 400;\n  color: rgba(227,159,141,1);\n  font-size: 45px;\n  margin-top: 50px;\n  margin-left: 44px;\n`;\n\nconst Rect3 = styled.div`\n  width: 411px;\n  height: 390px;\n  background-color: rgba(227,159,141,1);\n  margin-left: 254px;\n`;\n\nexport default CodingExercise;\n"]},"metadata":{},"sourceType":"module"}