{"ast":null,"code":"var _jsxFileName = \"D:\\\\Coding Exercise\\\\coding-exercise\\\\src\\\\screens\\\\CodingExercise.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../components/Button\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CodingExercise(props) {\n  _s();\n\n  const [value, setValue] = useState('');\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \"Coding Exercise :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProblemStatement, {\n      children: \"Problem Statement :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paragraph, {\n      children: [\"Write an application that given a number of pennies will calculate the minimum number of Sterling coins equivalent to that amount.\", \"\\n\", \"Eg. 123p = 1 x \\xA31, 1 x 20p, 1 x 2p, 1 x 1p\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rect2, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(InsertValue, {\n          children: [\"Insert Value :\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: value,\n            style: {\n              width: 100,\n              padding: 10,\n              margin: 8,\n              border: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            height: 38,\n            width: 97,\n            backgroundColor: \"rgba(95,75,139,1)\",\n            marginTop: 15,\n            marginLeft: 400\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Sterling coins\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Minimum number of Sterling coins\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.calories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CodingExercise, \"VT026KPfAMV2SfPHCKKw12yIC/g=\", false, function () {\n  return [useStyles];\n});\n\n_c = CodingExercise;\n\nconst getValue = () => {\n  console.log(this.state.value);\n};\n\nconst useStyles = makeStyles({\n  table: {\n    width: '50%',\n    backgroundColor: 'rgba(95,75,139,1)',\n    color: 'rgba(95,75,139,1)',\n    marginLeft: '44px'\n  }\n});\n\nfunction createData(name, calories) {\n  return {\n    name,\n    calories\n  };\n}\n\nconst rows = [createData('2', 159), createData('1', 237), createData('50p', 305), createData('20p', 262), createData('10p', 356), createData('5p', 356), createData('2p', 356), createData('1p', 356)];\nconst Container = styled.div`\n  display: flex;\n  background-color: rgba(95,75,139,1);\n  flex-direction: column;\n  height: 100%;\n  width: 100vw;\n`;\n_c2 = Container;\nconst Rect2 = styled.div`\n  width: 572px;\n  height: 179px;\n  background-color: rgba(227,159,141,1);\n  flex-direction: column;\n  display: flex;\n  margin-top: 50px;\n  margin-left: 44px;\n`;\n_c3 = Rect2;\nconst InsertValue = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 700;\n  color: rgba(95,75,139,1);\n  font-size: 18px;\n  margin-top: 46px;\n  margin-left: 14px;\n`;\n_c4 = InsertValue;\nconst Paragraph = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 400;\n  color: rgba(227,159,141,1);\n  font-size: 20px;\n  margin-top: 20px;\n  margin-left: 44px;\n`;\n_c5 = Paragraph;\nconst ProblemStatement = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 400;\n  color: rgba(227,159,141,1);\n  font-size: 31px;\n  margin-top: 20px;\n  margin-left: 44px;\n`;\n_c6 = ProblemStatement;\nconst Title = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 400;\n  color: rgba(227,159,141,1);\n  font-size: 45px;\n  margin-top: 10px;\n  margin-left: 44px;\n`;\n_c7 = Title;\nconst Rect3 = styled.div`\n  width: 411px;\n  height: 390px;\n  background-color: rgba(227,159,141,1);\n  margin-left: 254px;\n`;\nexport default CodingExercise;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"CodingExercise\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Rect2\");\n$RefreshReg$(_c4, \"InsertValue\");\n$RefreshReg$(_c5, \"Paragraph\");\n$RefreshReg$(_c6, \"ProblemStatement\");\n$RefreshReg$(_c7, \"Title\");","map":{"version":3,"sources":["D:/Coding Exercise/coding-exercise/src/screens/CodingExercise.js"],"names":["React","useState","styled","Button","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","CodingExercise","props","value","setValue","classes","useStyles","handleSubmit","width","padding","margin","border","height","backgroundColor","marginTop","marginLeft","table","rows","map","row","name","calories","getValue","console","log","state","color","createData","Container","div","Rect2","InsertValue","span","Paragraph","ProblemStatement","Title","Rect3"],"mappings":"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","sourcesContent":["import React, {useState}  from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"../components/Button\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\n\nfunction CodingExercise(props) {\n  const [value,setValue] = useState('');\n  const classes = useStyles();\n  return (\n    <Container>\n      <Title>Coding Exercise :</Title>\n      <ProblemStatement>Problem Statement :</ProblemStatement>\n      <Paragraph>\n        Write an application that given a number of pennies will calculate the\n        minimum number of Sterling coins equivalent to that amount.{\"\\n\"}Eg.\n        123p = 1 x £1, 1 x 20p, 1 x 2p, 1 x 1p\n      </Paragraph>\n      <Rect2>\n      <form onSubmit={this.handleSubmit}>\n        <InsertValue>Insert Value : \n          <input type=\"text\" value={value} style={{width: 100,\n                                  padding: 10,\n                                  margin: 8,\n                                  border: 1}} />\n          </InsertValue>\n        \n        <Button\n          style={{\n            height: 38,\n            width: 97,\n            backgroundColor: \"rgba(95,75,139,1)\",\n            marginTop: 15,\n            marginLeft: 400\n          }}\n         ></Button>\n         <input type=\"submit\" value=\"Submit\" />\n         </form>\n      </Rect2>\n      <TableContainer >\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Sterling coins</TableCell>\n            <TableCell align=\"right\">Minimum number of Sterling coins</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </TableCell>\n              <TableCell align=\"right\">{row.calories}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </Container>\n  );\n}\n\nconst getValue = () =>{\n  console.log(this.state.value);\n}\n\nconst useStyles = makeStyles({\n  table: {\n    width: '50%',\n    backgroundColor:'rgba(95,75,139,1)',\n    color: 'rgba(95,75,139,1)',\n    marginLeft: '44px',\n  },\n});\n\nfunction createData(name, calories) {\n  return { name, calories };\n}\n\nconst rows = [\n  createData('2', 159),\n  createData('1', 237),\n  createData('50p', 305),\n  createData('20p', 262),\n  createData('10p', 356),\n  createData('5p', 356),\n  createData('2p', 356),\n  createData('1p', 356),\n];\n\nconst Container = styled.div`\n  display: flex;\n  background-color: rgba(95,75,139,1);\n  flex-direction: column;\n  height: 100%;\n  width: 100vw;\n`;\n\nconst Rect2 = styled.div`\n  width: 572px;\n  height: 179px;\n  background-color: rgba(227,159,141,1);\n  flex-direction: column;\n  display: flex;\n  margin-top: 50px;\n  margin-left: 44px;\n`;\n\nconst InsertValue = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 700;\n  color: rgba(95,75,139,1);\n  font-size: 18px;\n  margin-top: 46px;\n  margin-left: 14px;\n`;\n\nconst Paragraph = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 400;\n  color: rgba(227,159,141,1);\n  font-size: 20px;\n  margin-top: 20px;\n  margin-left: 44px;\n`;\n\nconst ProblemStatement = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 400;\n  color: rgba(227,159,141,1);\n  font-size: 31px;\n  margin-top: 20px;\n  margin-left: 44px;\n`;\n\nconst Title = styled.span`\n  font-family: Roboto;\n  font-style: normal;\n  font-weight: 400;\n  color: rgba(227,159,141,1);\n  font-size: 45px;\n  margin-top: 10px;\n  margin-left: 44px;\n`;\n\nconst Rect3 = styled.div`\n  width: 411px;\n  height: 390px;\n  background-color: rgba(227,159,141,1);\n  margin-left: 254px;\n`;\n\nexport default CodingExercise;\n"]},"metadata":{},"sourceType":"module"}